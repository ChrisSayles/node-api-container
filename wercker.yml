# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: node
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:

  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    - npm-install

# Doesn't work here...
#        cwd: /usr/src/app

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: Validate node version and directory information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
          echo "pwd $(pwd)"
          echo "ls -ltrah $(ls -ltrah)"

# Push to DockerHub
push-to-dockerhub:
  steps:
    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        tag: development
        working-dir: /pipeline/source # For some reason this isn't the default
        cmd: "node app.js"
        ports: "8080"
        repository: wbleonard/node-api-container
        registry: https://registry.hub.docker.com

# Call OCCS Restart Webhook
restart-occs-deployment:
  steps:
    - script:
        name: Restart OCCS Deployment
        code: |
          curl -k -X POST 'https://140.86.40.114/api/v2/deployments/API-Container-20170802-172652/webhook/restart?token=hruzvnqd' -H 'authorization: Basic $($BEARER_TOKEN)'
 
# Deploy to AWS Elastic Beanstalk
#deploy:
#  steps:
#  - koding/eb-deploy@0.31.0:
#      access-key: $AWS_KEY
#      secret-key: $AWS_SECRET
#      app-name: node-api-container
#      env-name: node-api-container
#      version-label: 1.0
#      region: $AWS_REGION
#      s3-bucket: s3://node-api-container/
#      s3-key: my-wordpress-app-1.2.1.tar.gz


# Push to the Google Container Registry
push-to-gcr:
    steps:
      - internal/docker-push:
          username: _json_key
          password: $GCR_JSON_KEY_FILE
          repository: gcr.io/node-api-container-175518/node-api-container
          registry: https://gcr.io/v2
        
# Push to AWS Elastic Container Registry
push-to-ecr:
  steps:
    - internal/docker-push:
        aws-access-key: $AWS_ACCESS_KEY_ID
        aws-secret-key: $AWS_SECRET_ACCESS_KEY
        aws-region: $AWS_REGION
        aws-registry-id: $AWS_REGISTRY_ID
        repository: 432275605314.dkr.ecr.us-east-1.amazonaws.com/node-api-container 
